/*
 * Do not edit: automatically generated by mkavrintel.pl
 *
 * hw_boot_sections.h
 *
 * Defines numbers of boot sections and size of smallest one, if any
 * Email the meta-author regarding errors/omissions in this file
 *
 * Published under GNU General Public License, version 3 (GPL-3.0)
 * Meta-author Stefan Rueger <stefan.rueger@urclocks.com>
 *
 * v 1.0
 * 21.02.2023
 *
 */

#ifndef HW_BOOT_SECTIONS_H
#define HW_BOOT_SECTIONS_H

#if 0

Defines the following constants:

HW_N_BOOT_SECTIONS, which can be
 -1 Unkown whether part has hardware boot sections or not (eg, missing ATDFs)
  0 Part does not support hardware boot sections
  1 For, eg, XMEGAs that have one boot section in top flash
  1 For modern (AVR8X) parts that have a variable sized boot section in bottom flash
  4 There are four sizes of boot sections in top flash: 2^i min_size with i in 0..3

HW_MIN_BOOTSIZE, which can be
   -1 Unkown whether part has hardware boot section support or not
    0 Part does not support hardware boot sections
  <n> Minimum size (eg, XMEGA only have one size but other sizes vary)

HW_BLSTART0, which can be
      -1 When the part does not support hardware boot sections or it is not known is does
  <addr> Address of start of *smallest* possible bootloader


#elif defined(__AVR_ATmega32__) || defined(__AVR_ATmega32A__) || defined(__AVR_ATmega32HVB__) || \
  defined(__AVR_ATmega32HVBrevB__) || defined(__AVR_ATmega32C1__) || \
  defined(__AVR_ATmega32M1__) || defined(__AVR_ATmega32U2__) || defined(__AVR_ATmega32U4__) || \
  defined(__AVR_ATmega32U6__) || defined(__AVR_ATmega323__) || defined(__AVR_ATmega324A__) || \
  defined(__AVR_ATmega324P__) || defined(__AVR_ATmega324PA__) || defined(__AVR_ATmega324PB__) || \
  defined(__AVR_ATmega325__) || defined(__AVR_ATmega325A__) || defined(__AVR_ATmega325P__) || \
  defined(__AVR_ATmega325PA__) || defined(__AVR_ATmega328__) || defined(__AVR_ATmega328P__) || \
  defined(__AVR_ATmega328PB__) || defined(__AVR_ATmega329__) || defined(__AVR_ATmega329A__) || \
  defined(__AVR_ATmega329P__) || defined(__AVR_ATmega329PA__) || defined(__AVR_ATmega3250__) || \
  defined(__AVR_ATmega3250A__) || defined(__AVR_ATmega3250P__) || \
  defined(__AVR_ATmega3250PA__) || defined(__AVR_ATmega3290__) || defined(__AVR_ATmega3290A__) || \
  defined(__AVR_ATmega3290P__) || defined(__AVR_ATmega3290PA__) || defined(__AVR_ATA6614Q__)

#define HW_N_BOOT_SECTIONS    4
#define HW_MIN_BOOTSIZE     512
#define HW_BLSTART0      0x7dff

#elif defined(__AVR_ATmega16__) || defined(__AVR_ATmega16A__) || defined(__AVR_ATmega162__) || \
  defined(__AVR_ATmega163__) || defined(__AVR_ATmega164A__) || defined(__AVR_ATmega164P__) || \
  defined(__AVR_ATmega164PA__) || defined(__AVR_ATmega165__) || defined(__AVR_ATmega165A__) || \
  defined(__AVR_ATmega165P__) || defined(__AVR_ATmega165PA__) || defined(__AVR_ATmega168__) || \
  defined(__AVR_ATmega168A__) || defined(__AVR_ATmega168P__) || defined(__AVR_ATmega168PA__) || \
  defined(__AVR_ATmega168PB__) || defined(__AVR_ATmega169__) || defined(__AVR_ATmega169A__) || \
  defined(__AVR_ATmega169P__) || defined(__AVR_ATmega169PA__) || defined(__AVR_AT90PWM161__) || \
  defined(__AVR_ATA6613C__)

#define HW_N_BOOT_SECTIONS    4
#define HW_MIN_BOOTSIZE     256
#define HW_BLSTART0      0x3eff

#else
#define UR_NBOOTS            -1
#define UR_MIN_BOOTSIZE      -1
#define HW_BLSTART0          -1

#endif

#endif
